{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _d = require('d3');\n\nvar _d2 = _interopRequireDefault(_d);\n\nvar _Chart = require('./Chart');\n\nvar _Chart2 = _interopRequireDefault(_Chart);\n\nvar _Axis = require('./Axis');\n\nvar _Axis2 = _interopRequireDefault(_Axis);\n\nvar _Tooltip = require('./Tooltip');\n\nvar _Tooltip2 = _interopRequireDefault(_Tooltip);\n\nvar _DefaultPropsMixin = require('./DefaultPropsMixin');\n\nvar _DefaultPropsMixin2 = _interopRequireDefault(_DefaultPropsMixin);\n\nvar _HeightWidthMixin = require('./HeightWidthMixin');\n\nvar _HeightWidthMixin2 = _interopRequireDefault(_HeightWidthMixin);\n\nvar _ArrayifyMixin = require('./ArrayifyMixin');\n\nvar _ArrayifyMixin2 = _interopRequireDefault(_ArrayifyMixin);\n\nvar _AccessorMixin = require('./AccessorMixin');\n\nvar _AccessorMixin2 = _interopRequireDefault(_AccessorMixin);\n\nvar _DefaultScalesMixin = require('./DefaultScalesMixin');\n\nvar _DefaultScalesMixin2 = _interopRequireDefault(_DefaultScalesMixin);\n\nvar _TooltipMixin = require('./TooltipMixin');\n\nvar _TooltipMixin2 = _interopRequireDefault(_TooltipMixin);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar array = _propTypes2.default.array,\n    func = _propTypes2.default.func,\n    string = _propTypes2.default.string;\nvar DataSet = (0, _createReactClass2.default)({\n  displayName: 'DataSet',\n  propTypes: {\n    data: array.isRequired,\n    symbol: func.isRequired,\n    xScale: func.isRequired,\n    yScale: func.isRequired,\n    colorScale: func.isRequired,\n    onMouseEnter: func,\n    onMouseLeave: func\n  },\n  render: function render() {\n    var _props = this.props,\n        data = _props.data,\n        symbol = _props.symbol,\n        xScale = _props.xScale,\n        yScale = _props.yScale,\n        colorScale = _props.colorScale,\n        label = _props.label,\n        values = _props.values,\n        x = _props.x,\n        y = _props.y,\n        onMouseEnter = _props.onMouseEnter,\n        _onMouseLeave = _props.onMouseLeave;\n    var circles = data.map(function (stack) {\n      return values(stack).map(function (e, index) {\n        var translate = 'translate(' + xScale(x(e)) + ', ' + yScale(y(e)) + ')';\n        return _react2.default.createElement('path', {\n          key: label(stack) + '.' + index,\n          className: 'dot',\n          d: symbol(),\n          transform: translate,\n          fill: colorScale(label(stack)),\n          onMouseOver: function onMouseOver(evt) {\n            return onMouseEnter(evt, e);\n          },\n          onMouseLeave: function onMouseLeave(evt) {\n            return _onMouseLeave(evt);\n          }\n        });\n      });\n    });\n    return _react2.default.createElement('g', null, circles);\n  }\n});\nvar ScatterPlot = (0, _createReactClass2.default)({\n  displayName: 'ScatterPlot',\n  mixins: [_DefaultPropsMixin2.default, _HeightWidthMixin2.default, _ArrayifyMixin2.default, _AccessorMixin2.default, _DefaultScalesMixin2.default, _TooltipMixin2.default],\n  propTypes: {\n    rScale: func,\n    shape: string\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      rScale: null,\n      shape: 'circle'\n    };\n  },\n  _tooltipHtml: function _tooltipHtml(d) {\n    var html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n    var xPos = this._xScale(this.props.x(d));\n\n    var yPos = this._yScale(this.props.y(d));\n\n    return [html, xPos, yPos];\n  },\n  render: function render() {\n    var _props2 = this.props,\n        height = _props2.height,\n        width = _props2.width,\n        margin = _props2.margin,\n        viewBox = _props2.viewBox,\n        preserveAspectRatio = _props2.preserveAspectRatio,\n        colorScale = _props2.colorScale,\n        rScale = _props2.rScale,\n        shape = _props2.shape,\n        label = _props2.label,\n        values = _props2.values,\n        x = _props2.x,\n        y = _props2.y,\n        xAxis = _props2.xAxis,\n        yAxis = _props2.yAxis;\n    var data = this._data;\n    var innerWidth = this._innerWidth;\n    var innerHeight = this._innerHeight;\n    var xScale = this._xScale;\n    var yScale = this._yScale;\n    var xIntercept = this._xIntercept;\n    var yIntercept = this._yIntercept;\n\n    var symbol = _d2.default.svg.symbol().type(shape);\n\n    if (rScale) {\n      symbol = symbol.size(rScale);\n    }\n\n    return _react2.default.createElement('div', null, _react2.default.createElement(_Chart2.default, {\n      height: height,\n      width: width,\n      margin: margin,\n      viewBox: viewBox,\n      preserveAspectRatio: preserveAspectRatio\n    }, _react2.default.createElement(_Axis2.default, _extends({\n      className: 'x axis',\n      orientation: 'bottom',\n      scale: xScale,\n      height: innerHeight,\n      width: innerWidth,\n      zero: yIntercept\n    }, xAxis)), _react2.default.createElement(_Axis2.default, _extends({\n      className: 'y axis',\n      orientation: 'left',\n      scale: yScale,\n      height: innerHeight,\n      width: innerWidth,\n      zero: xIntercept\n    }, yAxis)), _react2.default.createElement(DataSet, {\n      data: data,\n      xScale: xScale,\n      yScale: yScale,\n      colorScale: colorScale,\n      symbol: symbol,\n      label: label,\n      values: values,\n      x: x,\n      y: y,\n      onMouseEnter: this.onMouseEnter,\n      onMouseLeave: this.onMouseLeave\n    }), this.props.children), _react2.default.createElement(_Tooltip2.default, this.state.tooltip));\n  }\n});\nexports.default = ScatterPlot;","map":null,"metadata":{},"sourceType":"script"}