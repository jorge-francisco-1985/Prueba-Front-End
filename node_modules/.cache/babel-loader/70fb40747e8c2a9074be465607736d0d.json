{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d2 = require('d3');\n\nvar _d3 = _interopRequireDefault(_d2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar number = _propTypes2.default.number;\nvar DefaultScalesMixin = {\n  propTypes: {\n    barPadding: number\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      barPadding: 0.5\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    this._makeScales(this.props);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    this._makeScales(nextProps);\n  },\n  _makeScales: function _makeScales(props) {\n    var xScale = props.xScale,\n        xIntercept = props.xIntercept,\n        yScale = props.yScale,\n        yIntercept = props.yIntercept;\n\n    if (!xScale) {\n      var _makeXScale = this._makeXScale(props);\n\n      var _makeXScale2 = _slicedToArray(_makeXScale, 2);\n\n      this._xScale = _makeXScale2[0];\n      this._xIntercept = _makeXScale2[1];\n    } else {\n      var _ref = [xScale, xIntercept];\n      this._xScale = _ref[0];\n      this._xIntercept = _ref[1];\n    }\n\n    if (!yScale) {\n      var _makeYScale = this._makeYScale(props);\n\n      var _makeYScale2 = _slicedToArray(_makeYScale, 2);\n\n      this._yScale = _makeYScale2[0];\n      this._yIntercept = _makeYScale2[1];\n    } else {\n      var _ref2 = [yScale, yIntercept];\n      this._yScale = _ref2[0];\n      this._yIntercept = _ref2[1];\n    }\n  },\n  _makeXScale: function _makeXScale(props) {\n    var x = props.x,\n        values = props.values;\n    var data = this._data;\n\n    if (typeof x(values(data[0])[0]) === 'number') {\n      return this._makeLinearXScale(props);\n    } else if (typeof x(values(data[0])[0]).getMonth === 'function') {\n      return this._makeTimeXScale(props);\n    } else {\n      return this._makeOrdinalXScale(props);\n    }\n  },\n  _makeLinearXScale: function _makeLinearXScale(props) {\n    var x = props.x,\n        values = props.values;\n    var data = this._data;\n    var extentsData = data.map(function (stack) {\n      return values(stack).map(function (e) {\n        return x(e);\n      });\n    });\n\n    var extents = _d3.default.extent(Array.prototype.concat.apply([], extentsData));\n\n    var scale = _d3.default.scale.linear().domain(extents).range([0, this._innerWidth]);\n\n    var zero = _d3.default.max([0, scale.domain()[0]]);\n\n    var xIntercept = scale(zero);\n    return [scale, xIntercept];\n  },\n  _makeOrdinalXScale: function _makeOrdinalXScale(props) {\n    var x = props.x,\n        values = props.values,\n        barPadding = props.barPadding;\n\n    var scale = _d3.default.scale.ordinal().domain(values(this._data[0]).map(function (e) {\n      return x(e);\n    })).rangeRoundBands([0, this._innerWidth], barPadding);\n\n    return [scale, 0];\n  },\n  _makeTimeXScale: function _makeTimeXScale(props) {\n    var x = props.x,\n        values = props.values;\n\n    var minDate = _d3.default.min(values(this._data[0]), x);\n\n    var maxDate = _d3.default.max(values(this._data[0]), x);\n\n    var scale = _d3.default.time.scale().domain([minDate, maxDate]).range([0, this._innerWidth]);\n\n    return [scale, 0];\n  },\n  _makeYScale: function _makeYScale(props) {\n    var y = props.y,\n        values = props.values;\n    var data = this._data;\n\n    if (typeof y(values(data[0])[0]) === 'number') {\n      return this._makeLinearYScale(props);\n    } else {\n      return this._makeOrdinalYScale(props);\n    }\n  },\n  _makeLinearYScale: function _makeLinearYScale(props) {\n    var y = props.y,\n        y0 = props.y0,\n        values = props.values,\n        groupedBars = props.groupedBars;\n\n    var extentsData = this._data.map(function (stack) {\n      return values(stack).map(function (e) {\n        return groupedBars ? y(e) : y0(e) + y(e);\n      });\n    });\n\n    var extents = _d3.default.extent(Array.prototype.concat.apply([], extentsData));\n\n    extents = [_d3.default.min([0, extents[0]]), extents[1]];\n\n    var scale = _d3.default.scale.linear().domain(extents).range([this._innerHeight, 0]);\n\n    var zero = _d3.default.max([0, scale.domain()[0]]);\n\n    var yIntercept = scale(zero);\n    return [scale, yIntercept];\n  },\n  _makeOrdinalYScale: function _makeOrdinalYScale() {\n    var scale = _d3.default.scale.ordinal().range([this._innerHeight, 0]);\n\n    var yIntercept = scale(0);\n    return [scale, yIntercept];\n  }\n};\nexports.default = DefaultScalesMixin;","map":null,"metadata":{},"sourceType":"script"}