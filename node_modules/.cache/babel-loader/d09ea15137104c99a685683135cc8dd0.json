{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\prueba-front-end\\\\src\\\\components\\\\Element.js\";\nimport React, { Component } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Doughnut } from 'react-chartjs-2';\nimport './Element.css';\nimport Legend from './Legend';\nimport Title from './Title';\n\nvar numeral = require('numeral');\n\nclass Element extends Component {\n  // element.\n  constructor(props) {\n    super(props);\n    this.state = {\n      chartData: {\n        datasets: [{\n          label: props.element.title\n        }]\n      },\n      total: 0\n    };\n  }\n\n  componentDidMount() {\n    var data = [],\n        backgroundColor = [],\n        labels = [],\n        total = 0;\n\n    for (let i = this.props.element.data.length - 1; i >= 0; i--) {\n      total += this.props.element.data[i].value;\n      data.push(this.props.element.data[i].value);\n      backgroundColor.push(this.props.element.data[i].color);\n      labels.push(this.props.element.data[i].label);\n    }\n\n    this.setState({\n      chartData: {\n        labels: labels,\n        datasets: [{\n          data: data,\n          backgroundColor: backgroundColor\n        }]\n      },\n      total: total\n    });\n  }\n\n  render() {\n    var simbol = this.props.element.simbol,\n        title = this.props.element.title,\n        total = this.state.total,\n        data = this.props.element.data;\n    var component = data.map((element, i) => {\n      var percent = 100 / total * element.value,\n          color = element.color,\n          label = element.label,\n          value = element.value;\n      return React.createElement(Col, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Legend, {\n        label: label,\n        color: color,\n        percent: percent,\n        value: numeral(value).format('0,0,0,0'),\n        simbol: simbol,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    });\n    return React.createElement(\"div\", {\n      className: \"chart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Col, {\n      sm: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Doughnut, {\n      data: this.state.chartData,\n      options: {\n        cutoutPercentage: 90,\n        legend: {\n          display: false,\n          rotation: -0.7 * Math.PI\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Title, {\n      title: title,\n      total: total,\n      simbol: simbol,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, component));\n  }\n\n}\n\nexport default Element;","map":{"version":3,"sources":["C:\\xampp\\htdocs\\prueba-front-end\\src\\components\\Element.js"],"names":["React","Component","Row","Col","Doughnut","Legend","Title","numeral","require","Element","constructor","props","state","chartData","datasets","label","element","title","total","componentDidMount","data","backgroundColor","labels","i","length","value","push","color","setState","render","simbol","component","map","percent","format","cutoutPercentage","legend","display","rotation","Math","PI"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row,Col } from 'react-bootstrap';\r\nimport { Doughnut} from 'react-chartjs-2';\r\nimport './Element.css';\r\nimport Legend from './Legend';\r\nimport Title from './Title';\r\nvar numeral = require('numeral');\r\nclass Element extends Component {\r\n    // element.\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            chartData:{\r\n                \r\n                datasets:[\r\n                    {\r\n                        label: props.element.title,\r\n                    }\r\n                ]\r\n\r\n            },\r\n            total:0\r\n        }\r\n\r\n    }\r\n    componentDidMount() {\r\n        var data = [], backgroundColor = [], labels=[],total=0;\r\n        for (let i = this.props.element.data.length-1;i>=0;i--){\r\n            total += this.props.element.data[i].value;\r\n            data.push(this.props.element.data[i].value);\r\n            backgroundColor.push(this.props.element.data[i].color);\r\n            labels.push(this.props.element.data[i].label);\r\n        }\r\n                \r\n        this.setState({\r\n            chartData: {\r\n                labels: labels,\r\n                datasets: [{\r\n                    data: data,\r\n                    backgroundColor: backgroundColor,\r\n\r\n                }]\r\n            },\r\n            total:total\r\n        });\r\n        \r\n    }\r\n    render() {\r\n        var simbol = this.props.element.simbol,\r\n            title = this.props.element.title,\r\n            total=this.state.total,\r\n            data = this.props.element.data;\r\n\r\n        var component = data.map((element, i) => {\r\n            var percent = (100 / total) * element.value,\r\n                color = element.color,\r\n                label = element.label,\r\n                value = element.value;\r\n\r\n            return (\r\n                <Col key={i}>\r\n                    <Legend \r\n                        label={label} \r\n                        color={color} \r\n                        percent={percent} \r\n                        value={numeral(value).format('0,0,0,0')}\r\n                        simbol={simbol}\r\n                        ></Legend>\r\n                </Col>\r\n\r\n            )\r\n        })\r\n        return (\r\n            \r\n            <div className=\"chart\">\r\n                <Row>\r\n                    <Col sm={12}>\r\n                        <Doughnut\r\n                            data={this.state.chartData}\r\n                            options={{\r\n                                cutoutPercentage: 90,\r\n                                legend: {\r\n                                    display: false,\r\n                                    rotation: -0.7 * Math.PI\r\n                                }\r\n                            }}\r\n                        >\r\n\r\n                        </Doughnut>\r\n                        <Title title={title} total={total} simbol={simbol}></Title>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    {component}\r\n                </Row>\r\n                \r\n                \r\n                \r\n            </div>\r\n\r\n\r\n            \r\n        );\r\n    }\r\n}\r\nexport default Element;"]},"metadata":{},"sourceType":"module"}